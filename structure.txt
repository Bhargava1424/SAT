SAT/
├── frontend/
│   ├── node_modules/
│   ├── public/
│   ├── src/
│   │   ├── components/
│   │   │   ├── AddAttendance.js
│   │   │   ├── AddTeachers.js
│   │   │   ├── AuthContext.js
│   │   │   ├── CompletedSessions.js
│   │   │   ├── Dashboard.js
│   │   │   ├── LoginPage.js
│   │   │   ├── Navbar.js
│   │   │   ├── PendingSessions.js
│   │   │   ├── SessionsAndAllotment.js
│   │   │   ├── StudentAssessment.js
│   │   │   ├── StudentECA.js
│   │   │   ├── UpcomingSessions.js
│   │   │   ├── UpdateStudent.js
│   │   │   ├── UploadModal.js
│   │   │   └── ViewFeedbacks.js
│   │   ├── App.css
│   │   ├── App.js
│   │   ├── App.test.js
│   │   ├── index.css
│   │   ├── index.js
│   │   ├── logo.svg
│   │   ├── Navbar.css
│   │   ├── reportWebVitals.js
│   │   └── setupTests.js
│   ├── .gitignore
│   ├── package-lock.json
│   ├── package.json
│   ├── postcss.config.js
│   ├── README.md
│   └── tailwind.config.js
├── server/
│   ├── config/
│   │   └── db.js
│   ├── middleware/
│   ├── models/
│   │   ├── Branch.js
│   │   ├── ECA.js
│   │   ├── Feedback.js
│   │   ├── student.js
│   │   └── Teacher.js
│   ├── routes/
│   │   ├── branchRoutes.js
│   │   ├── driveRoutes.js
│   │   ├── ecaRoutes.js
│   │   ├── feedbackRoutes.js
│   │   ├── studentRoutes.js
│   │   └── teacherRoutes.js
│   ├── uploads/
│   ├── .gitignore
│   ├── .gitattributes
│   ├── package-lock.json
│   ├── package.json
│   └── server.js
└── .gitignore



-Student Assesment project using React+TailwindCSS+Node



 OAuth 2.0 Credentials:
{"web":{"client_id":"660495865700-eub3k43pf368cv6e3ul0j4mdsutgak1p.apps.googleusercontent.com","project_id":"edu-422717","auth_uri":"https://accounts.google.com/o/oauth2/auth","token_uri":"https://oauth2.googleapis.com/token","auth_provider_x509_cert_url":"https://www.googleapis.com/oauth2/v1/certs","client_secret":"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","javascript_origins":["http://localhost:3000"]}}




NOW i want to change SessionAndAllotments.
display the next 8 sessions from the selected Monday.

change the table completely.
I want you to fetch and use the sessions collection.
coming to the table, thead is fine,

<thead className="bg-[#2D5990] text-white">
              <tr>
                <th className="px-4 py-3 text-center border-b border-gray-200 text-sm md:text-base">Session</th>
                <th className="px-4 py-3 text-center border-b border-gray-200 text-sm md:text-base" colSpan={teachers.length}>
                  Teachers
                </th>
              </tr>
              <tr>
                <th className="px-4 py-3 text-center border-b border-gray-200"></th>
                {teachers.map((teacher) => (
                  <th key={teacher._id} className="px-4 py-3 text-center border-b border-gray-200 text-sm md:text-base">
                    {teacher.name}
                  </th>
                ))}
              </tr>
            </thead>


but, in tbody, I want first column to have periods and next columns to have all the teachers, status  of a session record.



import React, { useState, useEffect } from 'react';
import Navbar from './Navbar';
import DatePicker from 'react-datepicker';
import 'react-datepicker/dist/react-datepicker.css';
import { addDays, isMonday, nextMonday } from 'date-fns';
import { motion } from 'framer-motion';

const SessionAndAllotments = () => {
  const [teachers, setTeachers] = useState([]);
  const [sessions, setSessions] = useState([]);
  const [selectedMonday, setSelectedMonday] = useState(null);

  useEffect(() => {
    const fetchTeachers = async () => {
      const response = await fetch('http://localhost:5000/teachers');
      const data = await response.json();
      const filteredTeachers = data.filter(teacher => teacher.role === 'teacher');
      setTeachers(filteredTeachers);
    };
    fetchTeachers();
  }, []);

  useEffect(() => {
    if (selectedMonday) {
      const fetchSessions = async () => {
        const response = await fetch('http://localhost:5000/sessions');
        const data = await response.json();
        const filteredSessions = data.filter(session =>
          new Date(session.period.split(' - ')[0]) >= selectedMonday &&
          new Date(session.period.split(' - ')[0]) <= addDays(selectedMonday, 7 * 8)
        );
        setSessions(filteredSessions);
      };
      fetchSessions();
    }
  }, [selectedMonday]);

  const handleDateChange = (date) => {
    if (isMonday(date)) {
      setSelectedMonday(date);
    } else {
      setSelectedMonday(nextMonday(date));
    }
  };

  return (
    <div className="w-full bg-gray-100 min-h-screen">
      <Navbar />
      <div className="max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8">
        <h2 className="text-2xl md:text-3xl font-bold mb-4 text-center text-[#2D5990]">SESSIONS & ALLOTMENTS</h2>
        <div className="text-center my-4">
          <DatePicker
            selected={selectedMonday}
            onChange={handleDateChange}
            dateFormat="MMMM d, yyyy"
            placeholderText="Select a Monday"
            filterDate={date => isMonday(date)}
            className="px-4 py-2 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-[#2D5990]"
          />
        </div>
        <div className="overflow-auto max-h-screen rounded-lg shadow-lg">
          <table className="table-auto w-full bg-white border-collapse">
            <thead className="bg-[#2D5990] text-white">
              <tr>
                <th className="px-4 py-3 text-center border-b border-gray-200 text-sm md:text-base">Session</th>
                <th className="px-4 py-3 text-center border-b border-gray-200 text-sm md:text-base" colSpan={teachers.length}>
                  Teachers
                </th>
              </tr>
              <tr>
                <th className="px-4 py-3 text-center border-b border-gray-200"></th>
                {teachers.map((teacher) => (
                  <th key={teacher._id} className="px-4 py-3 text-center border-b border-gray-200 text-sm md:text-base">
                    {teacher.name}
                  </th>
                ))}
              </tr>
            </thead>
            <tbody>
              {sessions.map((session, index) => (
                <motion.tr
                  key={session._id}
                  className="even:bg-gray-100 hover:bg-gray-200"
                  initial={{ opacity: 0, y: 20 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.3, delay: index * 0.05 }}
                  
                >
                  <td className="px-4 py-3 border-b border-gray-200 text-center text-sm md:text-base">{session.period}</td>
                  {session.teachers.map((teacher, idx) => (
                    <td key={idx} className="px-4 py-3 border-b border-gray-200 text-center text-sm md:text-base">
                      {teacher.teacherID}, {teacher.status}
                    </td>
                  ))}
                </motion.tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  );
};

export default SessionAndAllotments;
